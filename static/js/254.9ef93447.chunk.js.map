{"version":3,"file":"static/js/254.9ef93447.chunk.js","mappings":"gLACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BAA5I,EAAgL,yB,mBCahL,EAVmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC7BH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAKK,SAAEN,EAAMS,QAGhC,ECDA,EARgB,SAACT,GACf,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,SAAEN,EAAMU,WAG9C,E,iDCDMC,GAAcC,EAAAA,EAAAA,GAAiB,IAoBrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,2BAAjC,EAlBuB,SAACd,GACtB,OACEe,EAAAA,EAAAA,MAAA,QAAMC,SAAUhB,EAAMiB,aAAaX,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CACJC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,GACrBF,KAAK,iBACLc,YAAY,0BAGhBpB,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,aAIhB,ICQA,EA3BgB,SAACN,GACf,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAC,OACxC1B,EAAAA,EAAAA,KAAC2B,EAAU,CAACrB,KAAMoB,EAAEpB,KAAiBP,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,GAAgB,IAE/C6B,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAC,OAC1C9B,EAAAA,EAAAA,KAAC+B,EAAO,CAACxB,QAASuB,EAAEvB,QAAoBR,GAAI+B,EAAE/B,IAAZ+B,EAAE/B,GAAgB,IAGtD,IAAqB,IAAjBF,EAAMmC,OAAkB,OAAOhC,EAAAA,EAAAA,KAACiC,EAAAA,GAAQ,CAAC5B,GAAI,WAMjD,OACEO,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,SAAEoB,KACvCX,EAAAA,EAAAA,MAAA,OAAKX,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAAG,SAAMyB,KACN5B,EAAAA,EAAAA,KAACkC,EAAc,CAACrB,SATA,SAACsB,GACrBtC,EAAMuC,YAAYD,EAAOE,eAC3B,SAWF,E,oBCZA,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAAClB,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEvB,IAEyB,SAACkB,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,GAASC,EAAAA,EAAAA,IAAmBJ,GAC9B,EAEJ,IAIEK,EAAAA,EAFF,CAGEC,E,4GCnBEC,EAA6B,SAACvB,GAAK,MAAM,CAC3CW,OAAQX,EAAMwB,KAAKb,OACpB,EAEYU,EAAmB,SAACI,GAU/B,OAJqCP,EAAAA,EAAAA,IAAQK,EAARL,EALb,SAAC1C,GACvB,OAAKA,EAAMmC,QACJhC,EAAAA,EAAAA,KAAC8C,GAASC,EAAAA,EAAAA,GAAA,GAAKlD,KADIG,EAAAA,EAAAA,KAACiC,EAAAA,GAAQ,CAAC5B,GAAI,UAE1C,GAOF,C","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__cBGH2\",\"dialogsItems\":\"Dialogs_dialogsItems__9cqaU\",\"dialog\":\"Dialogs_dialog__Z2pjl\",\"messages\":\"Dialogs_messages__4yEg0\",\"message\":\"Dialogs_message__0n+xI\"};","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.messages}>\r\n      <div className={classes.message}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        ></Field>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm.jsx\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} id={m.id} />\r\n  ));\r\n\r\n  if (props.isAuth === false) return <Navigate to={\"/login\"}></Navigate>;\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\r\n      <div className={classes.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  let redirectComponent = (props) => {\r\n    if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  const ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    redirectComponent\r\n  );\r\n\r\n  return ConnectAuthRedirectComponent;\r\n};\r\n"],"names":["props","path","id","_jsx","className","classes","children","NavLink","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","Navigate","AddMessageForm","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","_objectSpread"],"sourceRoot":""}